import os

env = Environment()

#sources
mysqlsrcdir = env.Dir('mysql-connector-c++-1.0.5/')

#targets
libsdir = env.Dir('../libs/')
mysqllib = env.File(libsdir.abspath + '/libmysqlcppconn-static.a')
mysqlmkfile = env.File(mysqlsrcdir.abspath + '/Makefile')
core = env.File('streetDog - core')

def build_sql_makefile(target=None, source=None, env=None):
    os.chdir(mysqlsrcdir.path)
    os.system('cmake -DCMAKE_INSTALL_PREFIX={0}'.format(libsdir))
    os.chdir('..')

def build_mysql_lib(target=None, source=None, env=None):
    os.system('make -C {0} mysqlcppconn-static'.format(source[0].abspath))
    os.system('mv {0}/driver/libmysqlcppconn-static.a {1}'.format(source[0].abspath, target[0].abspath))

env.Command(mysqlmkfile, [], build_sql_makefile)
env.Command(mysqllib, mysqlsrcdir, build_mysql_lib)

env.Program(core, [Glob('threads/*.cpp'), Glob('*.cpp')], 
            LIBS=Split('boost_system pthread rt boost_thread boost_date_time mysqlcppconn-static mysqlclient'), 
            LIBPATH=libsdir.abspath, CPPFLAGS=['-std=c++11', '-Wall'])

env.Depends(mysqllib, mysqlmkfile)
env.Depends(libsdir, mysqllib)
env.Depends(core, libsdir)

Default(core)
